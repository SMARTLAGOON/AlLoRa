# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Python Package Release

on:
  workflow_dispatch:
    inputs:
      versionType:
        description: 'Version type to bump (major, minor, patch)'
        required: true
        default: 'patch'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all tags are fetched

      - name: Set version bump type
        run: echo "VERSION_BUMP=${{ github.event.inputs.versionType }}" >> $GITHUB_ENV

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        with:
          tag_prefix: "v" # Our tags include the 'v' prefix
          # Uncomment the following line if you want to test without pushing the tags
          # dry_run: true
          # Use the input to set the version bump type
          bump: ${{ env.VERSION_BUMP }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version in setup.py
        run: |
          TAG_VERSION=$(echo ${{ steps.tag_version.outputs.new_tag }} | sed 's/^v//')
          echo "New version is $TAG_VERSION"
          sed -i'' -e "s/^VERSION = .*/VERSION = '$TAG_VERSION'/" setup.py
        if: steps.tag_version.outputs.new_tag != ''

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: |
          python -m build

      - name: Publish package to TestPyPI
        if: steps.tag_version.outputs.new_tag != ''
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/  # Make sure to use TestPyPI for testing
